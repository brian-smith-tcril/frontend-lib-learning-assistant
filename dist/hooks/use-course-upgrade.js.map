{"version":3,"file":"use-course-upgrade.js","names":["_react","require","_modelStore","_reactRedux","_context","_optimizely","_experiments","millisecondsInOneDay","useCourseUpgrade","courseId","isUpgradeEligible","useContext","CourseInfoContext","offer","accessExpiration","datesBannerInfo","useModel","verifiedMode","auditTrialLengthDays","auditTrial","useSelector","state","learningAssistant","decision","useAuditTrialExperimentDecision","enabled","variationKey","upgradeUrl","OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS","XPERT_AUDIT_14_DAY_TRIAL","XPERT_AUDIT_28_DAY_TRIAL","upgradeable","auditTrialExpired","auditTrialDaysRemaining","expirationDate","auditTrialExpirationDate","Date","Math","ceil","now","isFBE","contentTypeGatingEnabled"],"sources":["../../src/hooks/use-course-upgrade.js"],"sourcesContent":["import { useContext } from 'react';\nimport { useModel } from '@src/generic/model-store'; // eslint-disable-line import/no-unresolved\nimport { useSelector } from 'react-redux';\nimport { CourseInfoContext } from '../context';\n\nimport { OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS } from '../data/optimizely';\nimport { useAuditTrialExperimentDecision } from '../experiments';\n\nconst millisecondsInOneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n/**\n * @typedef AuditTrial\n * @type {object}\n * @property {string} startDate Date String of when the Trial started.\n * @property {string} expirationDate Date String of when the Trial ends.\n */\n\n/**\n * @typedef CourseUpgradeInfo\n * @type {object}\n * @property {boolean} upgradeable Should this user see a trial/upgrade option?.\n * @property {number} [auditTrialLengthDays] Audit Trial full length in days.\n * @property {number} [auditTrialDaysRemaining] Remaining day for the current trial (if any).\n * @property {boolean} [auditTrialExpired] True means that the audit has been taken and expired.\n * @property {AuditTrial} [auditTrial] The Audit trial information. Undefined if there's no trial for this user.\n * @property {string} [upgradeUrl] URL to redirect the user in case there's intention to upgrade.\n */\n\n/**\n * This hook returns related data for the Course Upgrade.\n *\n * @returns {CourseUpgradeInfo}\n */\nexport default function useCourseUpgrade() {\n  const { courseId, isUpgradeEligible } = useContext(CourseInfoContext);\n  const {\n    offer,\n    accessExpiration,\n    datesBannerInfo,\n  } = useModel('coursewareMeta', courseId);\n  const { verifiedMode } = useModel('courseHomeMeta', courseId);\n  const {\n    auditTrialLengthDays,\n    auditTrial,\n  } = useSelector(state => state.learningAssistant);\n\n  const [decision] = useAuditTrialExperimentDecision();\n  const { enabled, variationKey } = decision || {};\n\n  const upgradeUrl = offer?.upgradeUrl || verifiedMode?.upgradeUrl;\n\n  if (\n    !isUpgradeEligible\n    || !upgradeUrl\n    || !enabled\n    || (variationKey !== OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS.XPERT_AUDIT_14_DAY_TRIAL\n      && variationKey !== OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS.XPERT_AUDIT_28_DAY_TRIAL)\n  ) { return { upgradeable: false }; }\n\n  let auditTrialExpired = false;\n  let auditTrialDaysRemaining;\n\n  if (auditTrial?.expirationDate) {\n    const auditTrialExpirationDate = new Date(auditTrial.expirationDate);\n    auditTrialDaysRemaining = Math.ceil((auditTrialExpirationDate - Date.now()) / millisecondsInOneDay);\n\n    auditTrialExpired = auditTrialDaysRemaining <= 0;\n  }\n\n  const isFBE = !!accessExpiration && !!datesBannerInfo?.contentTypeGatingEnabled;\n\n  return {\n    upgradeable: true,\n    auditTrialLengthDays,\n    auditTrialDaysRemaining,\n    auditTrialExpired,\n    auditTrial,\n    upgradeUrl,\n    isFBE,\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAEA,IAAAI,WAAA,GAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AALqD;;AAOrD,MAAMM,oBAAoB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASC,gBAAgBA,CAAA,EAAG;EACzC,MAAM;IAAEC,QAAQ;IAAEC;EAAkB,CAAC,GAAG,IAAAC,iBAAU,EAACC,0BAAiB,CAAC;EACrE,MAAM;IACJC,KAAK;IACLC,gBAAgB;IAChBC;EACF,CAAC,GAAG,IAAAC,oBAAQ,EAAC,gBAAgB,EAAEP,QAAQ,CAAC;EACxC,MAAM;IAAEQ;EAAa,CAAC,GAAG,IAAAD,oBAAQ,EAAC,gBAAgB,EAAEP,QAAQ,CAAC;EAC7D,MAAM;IACJS,oBAAoB;IACpBC;EACF,CAAC,GAAG,IAAAC,uBAAW,EAACC,KAAK,IAAIA,KAAK,CAACC,iBAAiB,CAAC;EAEjD,MAAM,CAACC,QAAQ,CAAC,GAAG,IAAAC,4CAA+B,EAAC,CAAC;EACpD,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGH,QAAQ,IAAI,CAAC,CAAC;EAEhD,MAAMI,UAAU,GAAGd,KAAK,EAAEc,UAAU,IAAIV,YAAY,EAAEU,UAAU;EAEhE,IACE,CAACjB,iBAAiB,IACf,CAACiB,UAAU,IACX,CAACF,OAAO,IACPC,YAAY,KAAKE,mEAAuD,CAACC,wBAAwB,IAChGH,YAAY,KAAKE,mEAAuD,CAACE,wBAAyB,EACvG;IAAE,OAAO;MAAEC,WAAW,EAAE;IAAM,CAAC;EAAE;EAEnC,IAAIC,iBAAiB,GAAG,KAAK;EAC7B,IAAIC,uBAAuB;EAE3B,IAAId,UAAU,EAAEe,cAAc,EAAE;IAC9B,MAAMC,wBAAwB,GAAG,IAAIC,IAAI,CAACjB,UAAU,CAACe,cAAc,CAAC;IACpED,uBAAuB,GAAGI,IAAI,CAACC,IAAI,CAAC,CAACH,wBAAwB,GAAGC,IAAI,CAACG,GAAG,CAAC,CAAC,IAAIhC,oBAAoB,CAAC;IAEnGyB,iBAAiB,GAAGC,uBAAuB,IAAI,CAAC;EAClD;EAEA,MAAMO,KAAK,GAAG,CAAC,CAAC1B,gBAAgB,IAAI,CAAC,CAACC,eAAe,EAAE0B,wBAAwB;EAE/E,OAAO;IACLV,WAAW,EAAE,IAAI;IACjBb,oBAAoB;IACpBe,uBAAuB;IACvBD,iBAAiB;IACjBb,UAAU;IACVQ,UAAU;IACVa;EACF,CAAC;AACH","ignoreList":[]}