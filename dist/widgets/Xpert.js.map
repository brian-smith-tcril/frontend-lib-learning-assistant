{"version":3,"file":"Xpert.js","names":["_propTypes","_interopRequireDefault","require","_react","_reactRedux","_thunks","_ToggleXpertButton","_Sidebar","_optimizely","_experiments","_context","_jsxRuntime","obj","__esModule","default","XpertDisplay","_ref","courseId","contentToolsEnabled","unitId","isUpgradeEligible","sidebarIsOpen","setSidebarIsOpen","decision","useAuditTrialExperimentDecision","enabled","experimentEnabled","variationKey","shouldDisplayXpert","OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS","CONTROL","XpertSidebar","jsxs","Fragment","children","jsx","isOpen","setIsOpen","ExperimentsProvider","propTypes","PropTypes","string","isRequired","bool","func","Xpert","_ref2","dispatch","useDispatch","useEffect","getLearningAssistantChatSummary","courseInfo","useMemo","isEnabled","useSelector","state","learningAssistant","updateSidebarIsOpen","CourseInfoProvider","value","_default","exports"],"sources":["../../src/widgets/Xpert.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateSidebarIsOpen, getLearningAssistantChatSummary } from '../data/thunks';\nimport ToggleXpert from '../components/ToggleXpertButton';\nimport Sidebar from '../components/Sidebar';\nimport { OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS } from '../data/optimizely';\nimport { ExperimentsProvider, useAuditTrialExperimentDecision } from '../experiments';\nimport { CourseInfoProvider } from '../context';\n\nconst XpertDisplay = ({\n  courseId,\n  contentToolsEnabled,\n  unitId,\n  isUpgradeEligible,\n  sidebarIsOpen,\n  setSidebarIsOpen,\n}) => {\n  const [decision] = useAuditTrialExperimentDecision();\n  const { enabled: experimentEnabled, variationKey } = decision || {};\n\n  // Any user should see xpert unless they are an audit learner not part of the experiment or part of the control.\n  const shouldDisplayXpert = (\n    !(variationKey === OPTIMIZELY_AUDIT_TRIAL_LENGTH_EXPERIMENT_VARIATION_KEYS.CONTROL && isUpgradeEligible)\n    && !(!experimentEnabled && isUpgradeEligible)\n  );\n\n  const XpertSidebar = (\n    <>\n      <ToggleXpert\n        courseId={courseId}\n        isOpen={sidebarIsOpen}\n        setIsOpen={setSidebarIsOpen}\n        contentToolsEnabled={contentToolsEnabled}\n      />\n      <Sidebar\n        courseId={courseId}\n        isOpen={sidebarIsOpen}\n        setIsOpen={setSidebarIsOpen}\n        unitId={unitId}\n      />\n    </>\n  );\n\n  return shouldDisplayXpert ? (\n    <ExperimentsProvider>\n      {XpertSidebar}\n    </ExperimentsProvider>\n  ) : null;\n};\n\nXpertDisplay.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  contentToolsEnabled: PropTypes.bool.isRequired,\n  unitId: PropTypes.string.isRequired,\n  isUpgradeEligible: PropTypes.bool.isRequired,\n  sidebarIsOpen: PropTypes.func.isRequired,\n  setSidebarIsOpen: PropTypes.func.isRequired,\n};\n\nconst Xpert = ({\n  courseId,\n  contentToolsEnabled,\n  unitId,\n  isUpgradeEligible,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLearningAssistantChatSummary(courseId));\n  }, [dispatch, courseId]);\n\n  const courseInfo = useMemo(\n    () => ({ courseId, unitId, isUpgradeEligible }),\n    [courseId, unitId, isUpgradeEligible],\n  );\n\n  const {\n    isEnabled,\n    sidebarIsOpen,\n  } = useSelector(state => state.learningAssistant);\n\n  const setSidebarIsOpen = (isOpen) => {\n    dispatch(updateSidebarIsOpen(isOpen));\n  };\n\n  return isEnabled ? (\n    <CourseInfoProvider value={courseInfo}>\n      <ExperimentsProvider>\n        <XpertDisplay\n          courseId={courseId}\n          contentToolsEnabled={contentToolsEnabled}\n          unitId={unitId}\n          isUpgradeEligible={isUpgradeEligible}\n          sidebarIsOpen={sidebarIsOpen}\n          setSidebarIsOpen={setSidebarIsOpen}\n        />\n      </ExperimentsProvider>\n    </CourseInfoProvider>\n  ) : null;\n};\n\nXpert.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  contentToolsEnabled: PropTypes.bool.isRequired,\n  unitId: PropTypes.string.isRequired,\n  isUpgradeEligible: PropTypes.bool.isRequired,\n};\n\nexport default Xpert;\n"],"mappings":"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","ignoreList":[]}