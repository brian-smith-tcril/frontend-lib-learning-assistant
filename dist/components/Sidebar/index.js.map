{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_reactRedux","_propTypes","_paragon","_icons","_auth","_surveyMonkey","_APIError","_ChatBox","_Disclosure","_MessageForm","_UpgradePanel","_hooks","_xpertLogo","_optimizelyExperiment","_jsxRuntime","obj","__esModule","default","Sidebar","_ref","courseId","isOpen","setIsOpen","unitId","apiError","disclosureAcknowledged","messageList","useSelector","state","learningAssistant","upgradeable","upgradeUrl","auditTrialExpired","auditTrialDaysRemaining","useCourseUpgrade","track","useTrackEvent","handleClick","length","showSurvey","getMessageForm","jsx","shouldAutofocus","handleUpgradeLinkClick","userId","getAuthenticatedUser","trackUpgradeButtonClickedOptimizely","toString","linkCategory","linkName","linkType","pageName","getUpgradeLink","onClick","target","href","rel","children","getDaysRemainingMessage","jsxs","getDaysRemainingHeader","shouldShowSpinner","className","Spinner","animation","screenReaderText","getSidebar","ReactComponent","getPanel","showUpgrade","IconButton","src","Close","iconAs","Icon","alt","variant","invertColors","propTypes","PropTypes","string","isRequired","bool","func","_default","exports"],"sources":["../../../src/components/Sidebar/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  Icon,\n  IconButton,\n  Spinner,\n} from '@openedx/paragon';\nimport { Close } from '@openedx/paragon/icons';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport showSurvey from '../../utils/surveyMonkey';\n\nimport APIError from '../APIError';\nimport ChatBox from '../ChatBox';\nimport Disclosure from '../Disclosure';\nimport MessageForm from '../MessageForm';\nimport UpgradePanel from '../UpgradePanel';\nimport { useCourseUpgrade, useTrackEvent } from '../../hooks';\nimport { ReactComponent as XpertLogo } from '../../assets/xpert-logo.svg';\nimport { trackUpgradeButtonClickedOptimizely } from '../../utils/optimizelyExperiment';\nimport './Sidebar.scss';\n\nconst Sidebar = ({\n  courseId,\n  isOpen,\n  setIsOpen,\n  unitId,\n}) => {\n  const {\n    apiError,\n    disclosureAcknowledged,\n    messageList,\n  } = useSelector(state => state.learningAssistant);\n\n  const {\n    upgradeable, upgradeUrl, auditTrialExpired, auditTrialDaysRemaining,\n  } = useCourseUpgrade();\n\n  const { track } = useTrackEvent();\n\n  const handleClick = () => {\n    setIsOpen(false);\n\n    if (messageList.length >= 2) {\n      showSurvey();\n    }\n  };\n\n  const getMessageForm = () => (\n    <MessageForm courseId={courseId} shouldAutofocus unitId={unitId} />\n  );\n\n  const handleUpgradeLinkClick = () => {\n    const { userId } = getAuthenticatedUser();\n    trackUpgradeButtonClickedOptimizely(userId.toString());\n\n    track('edx.ui.lms.learning_assistant.days_remaining_banner_upgrade_click');\n    track('edx.bi.ecommerce.upsell_links_clicked', {\n      linkCategory: 'xpert_learning_assistant',\n      linkName: 'xpert_days_remaining_banner',\n      linkType: 'button',\n      pageName: 'in_course',\n    });\n  };\n\n  const getUpgradeLink = () => (\n    <a\n      onClick={handleUpgradeLinkClick}\n      target=\"_blank\"\n      href={upgradeUrl}\n      rel=\"noreferrer\"\n      data-testid=\"days_remaining_banner_upgrade_link\"\n    >\n      Upgrade\n    </a>\n  );\n\n  const getDaysRemainingMessage = () => (\n    auditTrialDaysRemaining === 1 ? (\n      <div data-testid=\"trial-ends-today-message\">\n        Your trial ends today! {getUpgradeLink()} for full access to Xpert.\n      </div>\n    ) : (\n      <div data-testid=\"days-remaining-message\">\n        {auditTrialDaysRemaining} days remaining. {getUpgradeLink()} for full access to Xpert.\n      </div>\n    )\n  );\n\n  const getDaysRemainingHeader = () => {\n    if (!upgradeable || auditTrialDaysRemaining < 1) { return null; }\n\n    const shouldShowSpinner = !auditTrialDaysRemaining;\n    return (\n      <div\n        className={`trial-header ${shouldShowSpinner ? 'has-spinner' : ''}`}\n        data-testid=\"get-days-remaining-message\"\n      >\n        {shouldShowSpinner ? (\n          <Spinner animation=\"border\" className=\"spinner\" data-testid=\"days-remaining-spinner\" screenReaderText=\"loading\" />\n        ) : (\n          getDaysRemainingMessage()\n        )}\n      </div>\n    );\n  };\n\n  const getSidebar = () => (\n    <div\n      className=\"d-flex flex-column h-100\"\n      data-testid=\"sidebar-xpert\"\n    >\n      <div className=\"sidebar-header\" data-testid=\"sidebar-xpert-header\">\n        <XpertLogo />\n      </div>\n\n      {getDaysRemainingHeader()}\n\n      <ChatBox messageList={messageList} />\n      {\n        apiError\n        && (\n          <div className=\"d-flex flex-column p-3 mt-auto\">\n            <APIError />\n          </div>\n        )\n      }\n      <div className=\"sidebar-footer\">\n        {getMessageForm()}\n      </div>\n    </div>\n  );\n\n  const getPanel = () => {\n    const showUpgrade = upgradeable && auditTrialExpired;\n\n    if (showUpgrade) {\n      return <UpgradePanel />;\n    }\n    return (disclosureAcknowledged ? (getSidebar()) : (<Disclosure>{getMessageForm()}</Disclosure>));\n  };\n\n  return (\n    isOpen && (\n      <div\n        className=\"sidebar position-fixed\"\n        data-testid=\"sidebar\"\n      >\n        <IconButton\n          className=\"chat-close position-absolute border-0\"\n          src={Close}\n          iconAs={Icon}\n          onClick={handleClick}\n          alt=\"close\"\n          aria-label=\"close\"\n          variant=\"primary\"\n          invertColors\n          data-testid=\"close-button\"\n        />\n        {getPanel()}\n      </div>\n    )\n  );\n};\n\nSidebar.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n  unitId: PropTypes.string.isRequired,\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]}